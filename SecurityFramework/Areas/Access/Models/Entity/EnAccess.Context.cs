//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SecurityFramework.Areas.Access.Models.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AccessEntities : DbContext
    {
        public AccessEntities()
            : base("name=AccessEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Domain> Domains { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<Office> Offices { get; set; }
        public virtual DbSet<Organization> Organizations { get; set; }
        public virtual DbSet<RoleRoute> RoleRoutes { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<RoleUser> RoleUsers { get; set; }
        public virtual DbSet<Route> Routes { get; set; }
        public virtual DbSet<Shop> Shops { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<vwArea> vwAreas { get; set; }
        public virtual DbSet<vwAreaAndRole> vwAreasAndRoles { get; set; }
        public virtual DbSet<vwAreaAndRoleAndRoute> vwAreasAndRolesAndRoutes { get; set; }
        public virtual DbSet<vwAreaAndRoleAndUser> vwAreasAndRolesAndUsers { get; set; }
        public virtual DbSet<vwAreaTree> vwAreaTrees { get; set; }
        public virtual DbSet<vwIsInRole> vwIsInRoles { get; set; }
        public virtual DbSet<vwRoleRoute> vwRolesRoutes { get; set; }
        public virtual DbSet<vwRoleUser> vwRolesUsers { get; set; }
        public virtual DbSet<vwRole> vwRoles { get; set; }
    
        public virtual ObjectResult<Nullable<int>> spIsInRole(Nullable<System.Guid> appId, string userId, string route)
        {
            var appIdParameter = appId.HasValue ?
                new ObjectParameter("AppId", appId) :
                new ObjectParameter("AppId", typeof(System.Guid));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spIsInRole", appIdParameter, userIdParameter, routeParameter);
        }
    
        public virtual ObjectResult<spUserAreas_Result> spUserAreas(Nullable<System.Guid> appId, string userId)
        {
            var appIdParameter = appId.HasValue ?
                new ObjectParameter("AppId", appId) :
                new ObjectParameter("AppId", typeof(System.Guid));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUserAreas_Result>("spUserAreas", appIdParameter, userIdParameter);
        }
    }
}
